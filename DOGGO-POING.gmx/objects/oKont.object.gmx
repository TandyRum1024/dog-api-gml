<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iui_init();

dogListID    = -1;
dogListReady = false;
dogListRaw = "";
dogListPretty = "";

dogRandomID    = -1;
dogRandomPicReady = false;
dogRandomUrlReady = false;
dogRandomPic   = 0;
dogRandomURL   = "";



dogError = "";
dogErrorCounter = 0;
dogRequested = false;

draw_set_font(fnt_default);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iui_update_io();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (async_load[? "status"] == 0)
{
    if (async_load[? "id"] == dogListID)
    {
        var result = async_load[? "result"];
        var isGood = false;
        result = json_decode(result);
        
        isGood = result[? "status"];
        show_debug_message("STATUS : " + isGood);
        
        if (isGood == "success")
        {
            var rawJson = result[? "message"];
            
            dogListRaw    = rawJson;
            dogListPretty = map_prettydump( rawJson );;
            dogListReady  = true;
            dogRequested  = false;
        }
        else
        {
            dogError = "ERROR : FAILED DATA!#" + isGood;
            dogErrorCounter = 60;
        }
    }
    else if (async_load[? "id"] == dogRandomID)
    {
        var result = async_load[? "result"];
        var isGood = false;
        result = json_decode(result);
        
        isGood = result[? "status"];
        show_debug_message("STATUS : " + isGood);
        
        if (isGood == "success")
        {
            dogRandomURL      = result[? "message"];
            dogRandomUrlReady = true;
            
            dogRandomPic = sprite_add(dogRandomURL, 1, false, false, 0, 0);
            dogRequested = true;
        }
        else
        {
            dogError = isGood;
            dogErrorCounter = 60;
        }
    }
}
else if (async_load[? "status"] &lt; 0)
    show_message("ERROR : [" + async_load[? "result"] + "], request : " + async_load[? "url"] );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (async_load[? "id"] == dogRandomPic)
{
    if (async_load[? "status"] == 0)
    {
        show_debug_message("PIC SENT");
    
        // set origin to center
        var w = sprite_get_width(dogRandomPic);
        var h = sprite_get_height(dogRandomPic);
        
        sprite_set_offset(dogRandomPic, w / 2, h / 2);
        dogRandomPicReady = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_clear(iuDark);

var CENTER_X = room_width / 2;
var CENTER_Y = room_height / 2;

var colRainbow = make_colour_hsv(iuiAnimTime, 255, 255);

iui_begin();

iui_align_center();

if (dogListReady)
{
    if (!dogRandomUrlReady &amp;&amp; !dogRequested)
    {
        draw_set_font(fnt_normal);
        iui_label_shadow(CENTER_X, CENTER_Y, dogListPretty, iuCream, 0, 2, iuHellaDark);
        draw_set_font(fnt_default);
    }
    
    // loadin' dog pic
    if (dogRandomUrlReady)
    {
        if (dogRandomPicReady)
            draw_sprite(dogRandomPic, 0, CENTER_X, CENTER_Y);
        else
            iui_label_shadow(CENTER_X, CENTER_Y + sin(iuiAnimTime * 0.1) * 8, "Sending doggo pics...", colRainbow, 0, 4, iuHellaDark);
    
        iui_label_shadow(CENTER_X, CENTER_Y / 3, "URL : " + string(dogRandomURL), colRainbow, 0, 4, iuHellaDark);
    }
    else if (dogRequested)
    {
        iui_label_shadow(CENTER_X, CENTER_Y + sin(iuiAnimTime * 0.1) * 8, "Requesting doggo pics...", colRainbow, 0, 4, iuHellaDark);
    }
    
    draw_set_font(fnt_normal);
    var bork = iui_button(CENTER_X - 100, CENTER_Y + 200, 200, 80, "SEND DOGGO###DOGGO");
    draw_set_font(fnt_default);
    if (bork)
    {
        dogRandomID  = http_get("https://dog.ceo/api/breeds/image/random");
        dogRequested = true;
        
        dogRandomPicReady = false;
        dogRandomUrlReady = false;
    }
}
else
{
    if (dogRequested)
    {
        iui_label_shadow(CENTER_X, CENTER_Y + sin(iuiAnimTime * 0.1) * 8, "-=[LOADING]=-", colRainbow, 0, 4, iuHellaDark);
    }
    else
    {
        iui_label_shadow(CENTER_X, CENTER_Y, "Oi!", colRainbow, 0, 4, iuHellaDark);
        var bork = iui_button(CENTER_X - 100, CENTER_Y + 200, 200, 80, "GET LIST###LIST");
    
        if (bork)
        {
            dogListID    = http_get("https://dog.ceo/api/breeds/list/all");
            dogRequested = true;
        }
    }
}

if (dogError != "")
{
    iui_label(CENTER_X + sin(iuiAnimTime * 0.1) * 42, CENTER_Y + sin(iuiAnimTime * 0.1) * 42, dogError, colRainbow);
    dogErrorCounter--;
    
    if (dogErrorCounter &lt; 0)
    {
        dogErrorCounter = 0;
        dogError        = "";
    }
}

iui_align_center();

iui_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
